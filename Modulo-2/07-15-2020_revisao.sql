-- Ana Beatriz A. de M. da Silva
USE test;

-- 1) Analisar o MER e construir o código DDL
CREATE TABLE TB_DEPARTAMENTO (
  CD_DEPARTAMENTO INT PRIMARY KEY AUTO_INCREMENT,
  NM_DEPARTAMENTO VARCHAR(100),
  SG_DEPARTAMENTO VARCHAR(100)
);

CREATE TABLE TB_CARGO (
  CD_CARGO INT PRIMARY KEY AUTO_INCREMENT,
  NM_CARGO VARCHAR(100)
);

CREATE TABLE TB_PROJETO (
  CD_PROJETO INT PRIMARY KEY AUTO_INCREMENT,
  NM_PROJETO VARCHAR(100),
  DT_INICIO_PROJETO DATE,
  HRS_PREVISTAS_PROJETO VARCHAR(100)
);

CREATE TABLE TB_FUNCIONARIO (
  CD_FUNCIONARIO INT PRIMARY KEY AUTO_INCREMENT,
  NM_FUNCIONARIO VARCHAR(100),
  GNR_FUNCIONARIO ENUM('F', 'M'),
  TEL_FUNCIONARIO VARCHAR(100),
  ID_CARGO INT REFERENCES TB_CARGO(CD_CARGO),
  ID_DEPARTAMENTO INT REFERENCES TB_DEPARTAMENTO(CD_DEPARTAMENTO),
  ID_FUNCIONARIO INT REFERENCES TB_FUNCIONARIO(CD_FUNCIONARIO)
);

CREATE TABLE TB_HISTORICO_FUNCIONAL (
  CD_HISTORICO_FUNCIONAL INT PRIMARY KEY AUTO_INCREMENT,
  DT_HISTORICO_FUNCIONAL DATE,
  HISTORICO LONGTEXT,
  ID_FUNCIONARIO INT REFERENCES TB_FUNCIONARIO(CD_FUNCIONARIO),
  ID_CARGO INT REFERENCES TB_CARGO(CD_CARGO)
);

CREATE TABLE TB_DEPENDENTE (
  CD_DEPENDENTE INT PRIMARY KEY AUTO_INCREMENT,
  NM_DEPENDENTE VARCHAR(100),
  NM_PARENTESCO VARCHAR(100),
  ID_FUNCIONARIO INT REFERENCES TB_FUNCIONARIO(CD_FUNCIONARIO)
);

CREATE TABLE TB_PROJETO_FUNCIONARIO (
  DT_ALOCACAO DATE,
  ID_PROJETO INT REFERENCES TB_PROJETO(CD_PROJETO),
  ID_FUNCIONARIO INT REFERENCES TB_FUNCIONARIO(CD_FUNCIONARIO)
);

-- 2) Inserir ao menos 10 registros da tabela Funcionário
-- e ao menos 5 registros nas demais tabelas
INSERT INTO
  TB_FUNCIONARIO(NM_FUNCIONARIO, GNR_FUNCIONARIO, TEL_FUNCIONARIO,
    ID_CARGO, ID_DEPARTAMENTO, ID_FUNCIONARIO)
VALUES
  ('Lincoln Burrows', 'M', '13 91234-5678', 1, 1, 1),
  ('Michael Scofield', 'M', '13 90987-6543', 2, 2, 2),
  ('Fernando Sucre', 'M', '13 99876-5432', 3, 3, 3),
  ('T-Bag', 'M', '13 98765-4321', 4, 4, 4),
  ('Sara Tancredi', 'F', '10 92345-6789', 5, 5, 5),
  ('C-Note', 'm', '10 94537-2618', 6, 6, 1),
  ('Alexander Mahone', 'M', '10 98765-4637', 7, 7, 7),
  ('Gretchen Morgan', 'F', '10 97654-3872', 8, 8, 8),
  ('Don Self', 'M', '11 90546-7326', 9, 9, 9),
  ('Veronica Donovan', 'F', '11 96543-2716', 1, 2, 3);
    
INSERT INTO
  TB_DEPARTAMENTO(NM_DEPARTAMENTO, SG_DEPARTAMENTO)
VALUES
  ('The Old Grist Mill', 'TOGM'),
  ('Hard Times at the Huskin Bee', 'HTHB'),
  ('Schooltown Follies', 'SF'),
  ('Songs of the Dark Lantern', 'SDL'),
  ('Mad Love', 'ML');
    
INSERT INTO
  TB_CARGO(NM_CARGO)
VALUES
  ('Testador de toboágua'),
  ('Especialista em tecidos de papel'),
  ('Ordenhador de cobras'),
  ('Especialista em conserto de bichos de pelúcia'),
  ('Degustador de ração animal');
    
INSERT INTO
  TB_PROJETO(NM_PROJETO, DT_INICIO_PROJETO, HRS_PREVISTAS_PROJETO)
VALUES
  ('Por que o sábia sabia assobiar?', '2020-07-31', '1'),
  ('Será que camarão que dorme a onda leva mesmo?', '2020-07-31', '2'),
  ('Pra quê pressa se o futuro é a morte?', '2020-07-31', '3'),
  ('A materia ingles instrumental deveria ter instrumentos?', '2020-07-31', '4'),
  ('Mas Banco de Dados é a melhor disciplina de todas?', '2020-07-31', '5');
    
INSERT INTO
  TB_HISTORICO_FUNCIONAL(DT_HISTORICO_FUNCIONAL, HISTORICO,
    ID_FUNCIONARIO, ID_CARGO)
VALUES
  ('1970-02-17', 'n sei', 1, 1),
  ('1972-06-02', 'n sei 2', 2, 2),
  ('1970-12-24', 'n sei 3', 3, 3),
  ('1959-01-08', 'n sei 4', 4, 4),
  ('1977-06-01', 'n sei 5', 5, 5);
    
INSERT INTO
  TB_DEPENDENTE(NM_DEPENDENTE, NM_PARENTESCO, ID_FUNCIONARIO)
VALUES
  ('Dominic Purcell', 'desconhecido', 1),
  ('Wentworth Miller', 'desconhecido', 2),
  ('Amaury Nolasco', 'desconhecido', 3),
  ('Robert Knepper', 'desconhecido', 4),
  ('Sarah Wayne Callies', 'desconhecido', 5);

ALTER TABLE TB_DEPENDENTE
CHANGE COLUMN NM_PARENTESCO GRAU_PARENTESCO VARCHAR(100);
UPDATE TB_DEPENDENTE SET GRAU_PARENTESCO = 'Tio' WHERE CD_DEPENDENTE = 1;
UPDATE TB_DEPENDENTE SET GRAU_PARENTESCO = 'Pai' WHERE CD_DEPENDENTE = 2;
UPDATE TB_DEPENDENTE SET GRAU_PARENTESCO = 'Avô' WHERE CD_DEPENDENTE = 3;
UPDATE TB_DEPENDENTE SET GRAU_PARENTESCO = 'Padrasto'
WHERE CD_DEPENDENTE = 4;
UPDATE TB_DEPENDENTE SET GRAU_PARENTESCO = 'Mãe' WHERE CD_DEPENDENTE = 5;
    
INSERT INTO
  TB_PROJETO_FUNCIONARIO(DT_ALOCACAO, ID_PROJETO, ID_FUNCIONARIO)
VALUES
  ('2020-01-01', 1, 1),
  ('2019-01-01', 2, 2),
  ('2018-01-01', 3, 3),
  ('2017-01-01', 4, 4),
  ('2016-01-01', 5, 5);
    
-- 3) Alterar a tabela Funcionário, adicionando o campo Salário
ALTER TABLE TB_FUNCIONARIO ADD COLUMN SLRO_FUNCIONARIO LONGTEXT;
ALTER TABLE TB_FUNCIONARIO
MODIFY COLUMN SLRO_FUNCIONARIO DOUBLE(10, 2);

-- 4) Alterar as tabelas Funcionário e Dependente, adicionando
-- o campo Data_nascimento
ALTER TABLE TB_FUNCIONARIO ADD COLUMN DT_NASCIMENTO_FUNCIONARIO DATE;
ALTER TABLE TB_DEPENDENTE ADD COLUMN DT_NASCIMENTO_DEPENDENTE DATE;

UPDATE TB_FUNCIONARIO SET SLRO_FUNCIONARIO = 89765;

UPDATE TB_FUNCIONARIO SET DT_NASCIMENTO_FUNCIONARIO = '1971-02-17'
WHERE CD_FUNCIONARIO = 1;
UPDATE TB_FUNCIONARIO SET DT_NASCIMENTO_FUNCIONARIO = '1973-06-02'
WHERE CD_FUNCIONARIO = 2;
UPDATE TB_FUNCIONARIO SET DT_NASCIMENTO_FUNCIONARIO = '1972-12-24'
WHERE CD_FUNCIONARIO = 3;
UPDATE TB_FUNCIONARIO SET DT_NASCIMENTO_FUNCIONARIO = '1960-01-08'
WHERE CD_FUNCIONARIO = 4;
UPDATE TB_FUNCIONARIO SET DT_NASCIMENTO_FUNCIONARIO = '1978-06-01'
WHERE CD_FUNCIONARIO = 5;
UPDATE TB_FUNCIONARIO SET DT_NASCIMENTO_FUNCIONARIO = '1974-02-17'
WHERE CD_FUNCIONARIO = 6;
UPDATE TB_FUNCIONARIO SET DT_NASCIMENTO_FUNCIONARIO = '1975-06-02'
WHERE CD_FUNCIONARIO = 7;
UPDATE TB_FUNCIONARIO SET DT_NASCIMENTO_FUNCIONARIO = '1961-01-08'
WHERE CD_FUNCIONARIO = 8;
UPDATE TB_FUNCIONARIO SET DT_NASCIMENTO_FUNCIONARIO = '1979-06-01'
WHERE CD_FUNCIONARIO = 9;
UPDATE TB_FUNCIONARIO SET DT_NASCIMENTO_FUNCIONARIO = '1976-02-17'
WHERE CD_FUNCIONARIO = 10;

UPDATE TB_DEPENDENTE SET DT_NASCIMENTO_DEPENDENTE = '2000-08-29'
WHERE CD_DEPENDENTE = 1;
UPDATE TB_DEPENDENTE SET DT_NASCIMENTO_DEPENDENTE = '2001-08-21'
WHERE CD_DEPENDENTE = 2;
UPDATE TB_DEPENDENTE SET DT_NASCIMENTO_DEPENDENTE = '2002-09-10'
WHERE CD_DEPENDENTE = 3;
UPDATE TB_DEPENDENTE SET DT_NASCIMENTO_DEPENDENTE = '2003-08-09'
WHERE CD_DEPENDENTE = 4;
UPDATE TB_DEPENDENTE SET DT_NASCIMENTO_DEPENDENTE = '2005-07-06'
WHERE CD_DEPENDENTE = 5;

-- 5) Conceder aumento salarial de 15% ao funcionário mais velho
-- e 5% ao funcionário mais novo
/*
  Funcionario mais velho
    SELECT CD_FUNCIONARIO, DT_NASCIMENTO_FUNCIONARIO
  FROM TB_FUNCIONARIO
  ORDER BY DT_NASCIMENTO_FUNCIONARIO DESC LIMIT 1;
    
  Funcionario mais novo
    SELECT CD_FUNCIONARIO, DT_NASCIMENTO_FUNCIONARIO
  FROM TB_FUNCIONARIO
  ORDER BY DT_NASCIMENTO_FUNCIONARIO ASC LIMIT 1;
*/

UPDATE TB_FUNCIONARIO SET SLRO_FUNCIONARIO = 89765 * 1.15
WHERE CD_FUNCIONARIO = 9;
UPDATE TB_FUNCIONARIO SET SLRO_FUNCIONARIO = 89765 * 1.05
WHERE CD_FUNCIONARIO = 4;

-- 6.1) o nome do funcionário, os seus dependentes e o grau de parentesco
SELECT NM_FUNCIONARIO, NM_DEPENDENTE, GRAU_PARENTESCO FROM TB_FUNCIONARIO
INNER JOIN TB_DEPENDENTE
ON TB_DEPENDENTE.ID_FUNCIONARIO = TB_FUNCIONARIO.CD_FUNCIONARIO;

/*
  6.2) exibir o nome do funcionário, a quantidade de dependentes
  com idade até 14 anos, o salário atual e o valor de auxílio
  escolar equivalente a 10% do salário do funcionário
*/
SELECT
  NM_FUNCIONARIO,
  (SELECT COUNT(CD_DEPENDENTE)
  FROM TB_DEPENDENTE
  WHERE (YEAR(CURRENT_DATE) - YEAR(DT_NASCIMENTO_DEPENDENTE)) <= 14)
  AS DEPENDENTE_MENOR_14,
  SLRO_FUNCIONARIO,
  (SELECT SLRO_FUNCIONARIO * 0.9) AS AUXILIO_ESCOLAR
FROM TB_FUNCIONARIO
INNER JOIN TB_DEPENDENTE AS D
ON D.ID_FUNCIONARIO = TB_FUNCIONARIO.CD_FUNCIONARIO;

-- 6.3) o nome, o cargo e o histórico funcional do funcionário
SELECT NM_FUNCIONARIO, NM_CARGO, HISTORICO FROM TB_FUNCIONARIO
INNER JOIN TB_CARGO AS C ON TB_FUNCIONARIO.ID_CARGO = C.CD_CARGO
INNER JOIN TB_HISTORICO_FUNCIONAL AS HF
ON TB_FUNCIONARIO.ID_FUNCIONARIO = HF.ID_FUNCIONARIO
GROUP BY NM_CARGO DESC;

-- 6.4) o departamento, o chefe de departamento e os seus funcionários subordinados
SELECT
  NM_DEPARTAMENTO,
  (SELECT NM_FUNCIONARIO WHERE ID_CARGO = 4) AS CHEFE_DE_DEPARTAMENTO,
  (SELECT NM_FUNCIONARIO WHERE ID_CARGO != 4) AS SUBORDINADOS
FROM TB_FUNCIONARIO
INNER JOIN TB_DEPARTAMENTO AS D
ON D.CD_DEPARTAMENTO = TB_FUNCIONARIO.ID_FUNCIONARIO;

-- 6.5) o departamento, o cargo, o funcionário e os projetos
-- que ele participou
SELECT NM_DEPARTAMENTO, NM_CARGO, NM_FUNCIONARIO, ID_PROJETO
FROM TB_FUNCIONARIO
INNER JOIN TB_DEPARTAMENTO AS D
ON TB_FUNCIONARIO.ID_FUNCIONARIO = D.CD_DEPARTAMENTO
INNER JOIN TB_CARGO AS C ON TB_FUNCIONARIO.ID_CARGO = C.CD_CARGO
INNER JOIN TB_PROJETO_FUNCIONARIO AS PF
ON TB_FUNCIONARIO.ID_FUNCIONARIO = PF.ID_FUNCIONARIO
GROUP BY NM_CARGO;

/*
  6.6) exibir o nome do funcionário, o cargo e a soma do valor recebido
  pelo mesmo em 1 ano.
  Caso o funcionário tenha menos de 1 ano de admissão,
  calcular o valor recebido por ele desde sua entrada da empresa
*/

-- Nenhum funcionario tem menos de 1 ano:
-- SELECT YEAR(CURRENT_DATE) - YEAR(DT_HISTORICO_FUNCIONAL) FROM TB_HISTORICO_FUNCIONAL;
SELECT NM_FUNCIONARIO, NM_CARGO, SLRO_FUNCIONARIO * 12 AS SALARIO_UM_ANO
FROM TB_FUNCIONARIO
LEFT JOIN TB_CARGO AS C ON C.CD_CARGO = TB_FUNCIONARIO.ID_CARGO
ORDER BY NM_CARGO DESC;

UPDATE TB_CARGO SET NM_CARGO = 'Chefe de Departamento' WHERE CD_CARGO = 4;

-- BÔNUS: listar todos os funcionários que NÃO possuem dependentes
SELECT NM_FUNCIONARIO, NM_DEPENDENTE FROM TB_FUNCIONARIO
LEFT JOIN TB_DEPENDENTE AS D
ON D.ID_FUNCIONARIO = TB_FUNCIONARIO.CD_FUNCIONARIO
ORDER BY NM_DEPENDENTE;